{"ast":null,"code":"var _jsxFileName = \"/Users/ikedarikito/commude/react-project/todo-app/src/components/TodoList.jsx\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  const handleRemoveTask = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n  const handleUpdateTask = index => {\n    const newTodos = todos.map((todo, todoIndex) => {\n      if (todoIndex === index) {\n        todo.isCompleted = !todo.isCompleted;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [\"Add Task :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        placeholder: \"Add New Task\",\n        onChange: handleNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: todo.isCompleted ? \"line-through\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.isCompleted,\n          onChange: () => handleUpdateTask(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), todo.task, /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleRemoveTask(index),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TodoList","handleRemoveTask","index","newTodos","todos","splice","setTodos","handleUpdateTask","map","todo","todoIndex","isCompleted","children","onSubmit","handleSubmit","value","task","placeholder","onChange","handleNewTask","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","type","checked","onClick","cursor","_c","$RefreshReg$"],"sources":["/Users/ikedarikito/commude/react-project/todo-app/src/components/TodoList.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst TodoList = () => {\n\n  const handleRemoveTask = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const handleUpdateTask = index => {\n    const newTodos = todos.map((todo, todoIndex) => {\n      if (todoIndex === index) {\n        todo.isCompleted = !todo.isCompleted;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        Add Task :\n        <input\n          value={task}\n          placeholder=\"Add New Task\"\n          onChange={handleNewTask}\n        />\n      </form>\n      <ul>\n        {todos.map((todo, index) => (\n          <li\n            key={index}\n            style={{\n              textDecoration: todo.isCompleted ? \"line-through\" : \"none\",\n            }}\n          >\n            <input\n              type=\"checkbox\"\n              checked={todo.isCompleted}\n              onChange={() => handleUpdateTask(index)}\n            />\n            {todo.task}\n            <span\n              onClick={() => handleRemoveTask(index)}\n              style={{ cursor: \"pointer\" }}\n            >\n              X\n            </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAErB,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;IAChC,MAAMC,QAAQ,GAAG,CAAC,GAAGC,KAAK,CAAC;IAC3BD,QAAQ,CAACE,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IACzBI,QAAQ,CAACH,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMI,gBAAgB,GAAGL,KAAK,IAAI;IAChC,MAAMC,QAAQ,GAAGC,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,SAAS,KAAK;MAC9C,IAAIA,SAAS,KAAKR,KAAK,EAAE;QACvBO,IAAI,CAACE,WAAW,GAAG,CAACF,IAAI,CAACE,WAAW;MACtC;MACA,OAAOF,IAAI;IACb,CAAC,CAAC;IACFH,QAAQ,CAACH,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEJ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAMc,QAAQ,EAAEC,YAAa;MAAAF,QAAA,GAAC,YAE5B,eAAAb,OAAA;QACEgB,KAAK,EAAEC,IAAK;QACZC,WAAW,EAAC,cAAc;QAC1BC,QAAQ,EAAEC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG,eACPxB,OAAA;MAAAa,QAAA,EACGR,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEP,KAAK,kBACrBH,OAAA;QAEEyB,KAAK,EAAE;UACLC,cAAc,EAAEhB,IAAI,CAACE,WAAW,GAAG,cAAc,GAAG;QACtD,CAAE;QAAAC,QAAA,gBAEFb,OAAA;UACE2B,IAAI,EAAC,UAAU;UACfC,OAAO,EAAElB,IAAI,CAACE,WAAY;UAC1BO,QAAQ,EAAEA,CAAA,KAAMX,gBAAgB,CAACL,KAAK;QAAE;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxC,EACDd,IAAI,CAACO,IAAI,eACVjB,OAAA;UACE6B,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAACC,KAAK,CAAE;UACvCsB,KAAK,EAAE;YAAEK,MAAM,EAAE;UAAU,CAAE;UAAAjB,QAAA,EAC9B;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA,GAhBFrB,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAkBb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAACO,EAAA,GArDI9B,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}